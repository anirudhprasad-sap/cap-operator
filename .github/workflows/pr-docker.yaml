name: Build Docker on Label

on:
  pull_request:
    types: [labeled, closed]

env:
  REGISTRY: ghcr.io

jobs:
  build-on-label:
    if: github.event.action == 'labeled' && github.event.label.name == 'build-docker'
    strategy:
      matrix:
        workload: ["controller", "server", "web-hooks"]
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - name: Prepare repository name
      id: prepare-repository-name
      run: |
        repository=$REGISTRY/${{ github.repository }}/pr-image/${{ matrix.workload }}
        echo "repository=${repository,,}" >> $GITHUB_OUTPUT

    - name: Extract metadata (tags, labels) for Docker
      id: extract-metadata
      uses: docker/metadata-action@v5
      with:
        tags: |
          type=raw,value=pr-${{ github.event.pull_request.number }}
        images: ${{ steps.prepare-repository-name.outputs.repository }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        file: build/${{ matrix.workload }}/Dockerfile
        platforms: linux/amd64,linux/arm64
        context: .
        cache-from: |
          type=gha,scope=${{ matrix.workload }}-sha-${{ github.sha }}
          type=gha,scope=${{ github.ref_name }}-${{ matrix.workload }}
          type=gha,scope=${{ github.base_ref || 'main' }}
          type=gha,scope=main
        cache-to: |
          type=gha,scope=${{ matrix.workload }}-sha-${{ github.sha }},mode=max
          type=gha,scope=${{ github.ref_name }}-${{ matrix.workload }},mode=max
        push: true
        tags: ${{ steps.extract-metadata.outputs.tags }}
        labels: ${{ steps.extract-metadata.outputs.labels }}

  cleanup:
    if: github.event.action == 'closed'
    strategy:
      matrix:
        workload: ["controller", "server", "web-hooks"]
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      # Needed for package deletion
      id-token: write

    steps:
    - name: Delete PR image tag from GHCR
      env:
        GH_TOKEN: ${{ github.token }}
        PACKAGE_NAME: pr-image/${{ matrix.workload }}
        ORG: anirudhprasad-sap
        REPO: ${{ github.repository }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
      run: |
        PACKAGE="cap-operator/${PACKAGE_NAME}"
        PACKAGE_LOWER=$(echo "${PACKAGE}" | tr '[:upper:]' '[:lower:]')
        TAG="pr-${PR_NUMBER}"

        echo "Deleting GHCR image: $PACKAGE_LOWER:$TAG"

        # Get the package version id for the tag
        VERSION_ID=$(curl -s -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer $GH_TOKEN" \
          "https://api.github.com/orgs/${ORG}/packages/container/${PACKAGE_LOWER}/versions" \
          | jq -r ".[] | select(.metadata.container.tags[]? == \"${TAG}\") | .id")

        if [ -z "$VERSION_ID" ]; then
          echo "No version found for tag $TAG in $PACKAGE_LOWER"
          exit 0
        fi

        # Delete the package version
        curl -L -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer $GH_TOKEN" \
          "https://api.github.com/orgs/${ORG}/packages/container/${PACKAGE_LOWER}/versions/${VERSION_ID}"
